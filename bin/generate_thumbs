#!/bin/bash

REPO_ROOT=$(pwd)
IMAGES_DIR="$REPO_ROOT/src/images"
OUTPUT_FILE="$REPO_ROOT/src/_data/image_thumbnails.json"
TEMP_DIR="/tmp/thumbs_$$"  # Use process ID to avoid conflicts

mkdir -p "$TEMP_DIR"
mkdir -p "$(dirname "$OUTPUT_FILE")"

trap 'rm -rf "$TEMP_DIR"' EXIT

extract_jpeg_dimensions() {
  local file="$1"
  # Example output: "JPEG image data, JFIF standard 1.01, resolution (DPI), density 72x72, segment length 16, baseline, precision 8, 1920x1080, components 3"
  local info=$(file "$file")

  # Extract dimensions using regex - look for ", dimensions, " pattern
  if [[ $info =~ ,\s*([0-9]+)x([0-9]+),\s* ]]; then
    echo "${BASH_REMATCH[1]}/${BASH_REMATCH[2]}"
  else
    echo "ERROR: Could not extract image dimensions from: $file" >&2
    echo "File output: $info" >&2
    exit 1
  fi
}

echo "{" > $OUTPUT_FILE

count=0
total=$(find $IMAGES_DIR -name "*.jpg" | wc -l)

for img in $IMAGES_DIR/*.jpg; do
  filename=$(basename "$img")
  count=$((count+1))

  dimensions=$(extract_jpeg_dimensions "$img")

  temp_webp="$TEMP_DIR/${filename%.*}.webp"

  # Use cwebp with aggressive settings:
  # - Tiny size (32px wide)
  # - Low quality (20)
  # - Quiet mode to suppress output
  cwebp -quiet -resize 32 0 -q 20 "$img" -o "$temp_webp"

  base64_img=$(base64 -w 0 "$temp_webp")

  echo "  \"$filename\": {" >> $OUTPUT_FILE
  echo "    \"base64\": \"data:image/webp;base64,$base64_img\"," >> $OUTPUT_FILE
  echo "    \"aspect_ratio\": \"$dimensions\"" >> $OUTPUT_FILE

  if [ $count -lt $total ]; then
    echo "  }," >> $OUTPUT_FILE
  else
    echo "  }" >> $OUTPUT_FILE
  fi

  echo "Processed: $filename"
done

echo "}" >> $OUTPUT_FILE

echo "Processing complete: Generated $count thumbnails"
echo "Output saved to: $OUTPUT_FILE"
